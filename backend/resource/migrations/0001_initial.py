# Generated by Django 5.0.7 on 2025-04-17 08:34

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('config', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalDatabaseCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_type', models.CharField(choices=[('MS_SQL', 'MS_SQL'), ('POSTGRESQL', 'POSTGRESQL')], help_text='The type of external database (e.g., MSSQL, PostgreSQL).', max_length=40)),
                ('name', models.CharField(max_length=256)),
                ('user', models.CharField(max_length=256)),
                ('password', models.CharField(max_length=256)),
                ('host', models.CharField(max_length=256)),
                ('port', models.IntegerField()),
                ('table_name', models.CharField(max_length=256)),
                ('id_field', models.CharField(max_length=256)),
                ('employeeid_field', models.CharField(max_length=256)),
                ('direction_field', models.CharField(max_length=256)),
                ('shortname_field', models.CharField(max_length=256)),
                ('serialno_field', models.CharField(max_length=256)),
                ('log_datetime_field', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'database_credentials',
            },
        ),
        migrations.CreateModel(
            name='LastLogId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_log_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'last_log_id',
            },
        ),
        migrations.CreateModel(
            name='LastLogIdMandays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_log_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'last_log_id_mandays',
            },
        ),
        migrations.CreateModel(
            name='OvertimeRoundoffRules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('round_off_interval', models.DurationField(default=datetime.timedelta(seconds=900))),
                ('round_off_direction', models.CharField(choices=[('Up', 'Up'), ('Down', 'Down'), ('Nearest', 'Nearest')], default='nearest', max_length=50)),
            ],
            options={
                'db_table': 'overtime_roundoff_rules',
            },
        ),
        migrations.CreateModel(
            name='BiometricDeviceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_no', models.CharField(blank=True, help_text='Unique identifier for the device.', max_length=256, null=True)),
                ('serial_number', models.CharField(blank=True, help_text='Serial number of the biometric device.', max_length=256, null=True)),
                ('direction_of_use', models.CharField(choices=[('IN', 'IN'), ('OUT', 'OUT'), ('BOTH', 'BOTH')], help_text='Indicates the direction of access (IN, OUT, or BOTH) the device is configured for.', max_length=12)),
                ('purpose_of_device', models.CharField(blank=True, help_text='Describes the intended purpose of the biometric device (e.g., attendance, security).', max_length=256, null=True)),
                ('ip_address', models.CharField(blank=True, help_text='IP address of the biometric device for network communication.', max_length=256, null=True)),
                ('company', models.ForeignKey(blank=True, help_text='Reference to the company associated with the biometric device.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.company')),
                ('location', models.ForeignKey(blank=True, help_text='Reference to the location where the biometric device is installed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.location')),
            ],
            options={
                'verbose_name': 'Biometric Device Configuration',
                'verbose_name_plural': 'Biometric Device Configurations',
                'db_table': 'biometric_devices',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_pic', models.ImageField(blank=True, default='profile_pics/default_pic.jpg', null=True, upload_to='profile_pics/')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('employee_name', models.CharField(max_length=100)),
                ('device_enroll_id', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('pf_no', models.CharField(blank=True, max_length=20, null=True)),
                ('esi_no', models.CharField(blank=True, max_length=20, null=True)),
                ('insurance_no', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account_no', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account_type', models.CharField(blank=True, choices=[('Savings Account', 'Savings Account'), ('Current Account', 'Current Account'), ('Salary Account', 'Salary Account'), ('NRI Account', 'NRI Account'), ('Pension Account', 'Pension Account'), ('Other Account', 'Other Account')], max_length=20, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(blank=True, choices=[('Permanent Employee', 'Permanent Employee'), ('Temporary Employee', 'Temporary Employee'), ('Contractor Employee', 'Contractor Employee'), ('Probation Employee', 'Probation Employee')], max_length=100, null=True)),
                ('job_type', models.CharField(blank=True, choices=[('Training', 'Training'), ('Confirmed', 'Confirmed'), ('Professional', 'Professional'), ('Temporary', 'Temporary'), ('Permanent', 'Permanent')], max_length=100, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('date_of_leaving', models.DateField(blank=True, null=True)),
                ('job_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Resigned', 'Resigned'), ('Absconded', 'Absconded')], max_length=100, null=True)),
                ('reason_for_leaving', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=20, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('country_name', models.CharField(blank=True, default='India', max_length=100, null=True)),
                ('country_code', models.CharField(blank=True, default='IN', max_length=10, null=True)),
                ('uid_no', models.CharField(blank=True, max_length=20, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=20, null=True)),
                ('voter_id', models.CharField(blank=True, max_length=20, null=True)),
                ('driving_license', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('present_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('graduation', models.CharField(blank=True, max_length=100, null=True)),
                ('course_type', models.CharField(blank=True, choices=[('Under Graduate', 'Under Graduate'), ('Post Graduate', 'Post Graduate'), ('Diploma', 'Diploma'), ('Certificate', 'Certificate'), ('Other', 'Other')], max_length=100, null=True)),
                ('course', models.CharField(blank=True, max_length=100, null=True)),
                ('place_of_graduation', models.CharField(blank=True, max_length=100, null=True)),
                ('aggregate', models.FloatField(blank=True, null=True)),
                ('year_of_graduation', models.PositiveIntegerField(blank=True, null=True)),
                ('auto_shift', models.BooleanField(default=False)),
                ('first_weekly_off', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=6, null=True)),
                ('second_weekly_off', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=6, null=True)),
                ('week_off_effective_date', models.DateField(blank=True, null=True)),
                ('flexi_time', models.BooleanField(default=False)),
                ('consider_late_entry', models.BooleanField(default=False)),
                ('consider_early_exit', models.BooleanField(default=False)),
                ('consider_extra_hours_worked', models.BooleanField(default=False)),
                ('consider_late_entry_on_holiday', models.BooleanField(default=False)),
                ('consider_early_exit_on_holiday', models.BooleanField(default=False)),
                ('consider_extra_hours_worked_on_holiday', models.BooleanField(default=False)),
                ('search_next_day', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alt_reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alt_reports', to='resource.employee')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.designation')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.division')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.location')),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='resource.employee')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.shift')),
                ('shopfloor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.shopfloor')),
                ('subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config.subdivision')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'db_table': 'employee',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AWOWorkOffCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corrected_date', models.DateField(db_index=True)),
                ('day1_date', models.DateField()),
                ('day3_date', models.DateField()),
                ('original_status', models.CharField(default='WO', max_length=50)),
                ('correction_timestamp', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource.employee')),
            ],
            options={
                'db_table': 'awo_work_off_corrections',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logdate', models.DateField()),
                ('first_logtime', models.DateTimeField(blank=True, null=True)),
                ('last_logtime', models.DateTimeField(blank=True, null=True)),
                ('in_direction', models.CharField(blank=True, max_length=50, null=True)),
                ('out_direction', models.CharField(blank=True, max_length=50, null=True)),
                ('in_shortname', models.CharField(blank=True, max_length=50, null=True)),
                ('out_shortname', models.CharField(blank=True, max_length=50, null=True)),
                ('total_time', models.DurationField(blank=True, null=True)),
                ('late_entry', models.DurationField(blank=True, default=None, null=True)),
                ('early_exit', models.DurationField(blank=True, default=None, null=True)),
                ('overtime', models.DurationField(blank=True, default=None, null=True)),
                ('shift', models.CharField(blank=True, max_length=50, null=True)),
                ('shift_status', models.CharField(blank=True, max_length=50, null=True)),
                ('employeeid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource.employee')),
            ],
            options={
                'db_table': 'attendance',
            },
        ),
        migrations.CreateModel(
            name='HolidayList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_date', models.DateField()),
                ('holiday_name', models.CharField(max_length=100)),
                ('holiday_type', models.CharField(choices=[('PH', 'PH'), ('FH', 'FH')], default='PH', max_length=10)),
                ('holiday_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'holiday_list',
                'indexes': [models.Index(fields=['holiday_date'], name='idx_holiday_date'), models.Index(fields=['holiday_name'], name='idx_holiday_name'), models.Index(fields=['holiday_type'], name='idx_holiday_type'), models.Index(fields=['holiday_date', 'holiday_name'], name='idx_holiday_date_name')],
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('employeeid', models.CharField(blank=True, max_length=50, null=True)),
                ('log_datetime', models.DateTimeField(blank=True, null=True)),
                ('direction', models.CharField(blank=True, max_length=50, null=True)),
                ('shortname', models.CharField(blank=True, max_length=50, null=True)),
                ('serialno', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'logs',
                'indexes': [models.Index(fields=['employeeid', 'log_datetime'], name='logs_emp_logdt'), models.Index(fields=['log_datetime'], name='logs_logdt'), models.Index(fields=['direction'], name='logs_dir')],
            },
        ),
        migrations.CreateModel(
            name='ManDaysAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift', models.CharField(blank=True, max_length=50, null=True)),
                ('shift_status', models.CharField(blank=True, max_length=50, null=True)),
                ('logdate', models.DateField()),
                ('duty_in_1', models.TimeField(blank=True, null=True)),
                ('duty_out_1', models.TimeField(blank=True, null=True)),
                ('total_time_1', models.DurationField(blank=True, null=True)),
                ('duty_in_2', models.TimeField(blank=True, null=True)),
                ('duty_out_2', models.TimeField(blank=True, null=True)),
                ('total_time_2', models.DurationField(blank=True, null=True)),
                ('duty_in_3', models.TimeField(blank=True, null=True)),
                ('duty_out_3', models.TimeField(blank=True, null=True)),
                ('total_time_3', models.DurationField(blank=True, null=True)),
                ('duty_in_4', models.TimeField(blank=True, null=True)),
                ('duty_out_4', models.TimeField(blank=True, null=True)),
                ('total_time_4', models.DurationField(blank=True, null=True)),
                ('duty_in_5', models.TimeField(blank=True, null=True)),
                ('duty_out_5', models.TimeField(blank=True, null=True)),
                ('total_time_5', models.DurationField(blank=True, null=True)),
                ('duty_in_6', models.TimeField(blank=True, null=True)),
                ('duty_out_6', models.TimeField(blank=True, null=True)),
                ('total_time_6', models.DurationField(blank=True, null=True)),
                ('duty_in_7', models.TimeField(blank=True, null=True)),
                ('duty_out_7', models.TimeField(blank=True, null=True)),
                ('total_time_7', models.DurationField(blank=True, null=True)),
                ('duty_in_8', models.TimeField(blank=True, null=True)),
                ('duty_out_8', models.TimeField(blank=True, null=True)),
                ('total_time_8', models.DurationField(blank=True, null=True)),
                ('duty_in_9', models.TimeField(blank=True, null=True)),
                ('duty_out_9', models.TimeField(blank=True, null=True)),
                ('total_time_9', models.DurationField(blank=True, null=True)),
                ('duty_in_10', models.TimeField(blank=True, null=True)),
                ('duty_out_10', models.TimeField(blank=True, null=True)),
                ('total_time_10', models.DurationField(blank=True, null=True)),
                ('total_hours_worked', models.DurationField(blank=True, null=True)),
                ('employeeid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource.employee')),
            ],
            options={
                'db_table': 'mandays_attendance',
            },
        ),
        migrations.CreateModel(
            name='ManDaysMissedPunchAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift', models.CharField(blank=True, max_length=50, null=True)),
                ('shift_status', models.CharField(blank=True, max_length=50, null=True)),
                ('logdate', models.DateField()),
                ('duty_in_1', models.TimeField(blank=True, null=True)),
                ('duty_out_1', models.TimeField(blank=True, null=True)),
                ('duty_in_2', models.TimeField(blank=True, null=True)),
                ('duty_out_2', models.TimeField(blank=True, null=True)),
                ('duty_in_3', models.TimeField(blank=True, null=True)),
                ('duty_out_3', models.TimeField(blank=True, null=True)),
                ('duty_in_4', models.TimeField(blank=True, null=True)),
                ('duty_out_4', models.TimeField(blank=True, null=True)),
                ('duty_in_5', models.TimeField(blank=True, null=True)),
                ('duty_out_5', models.TimeField(blank=True, null=True)),
                ('duty_in_6', models.TimeField(blank=True, null=True)),
                ('duty_out_6', models.TimeField(blank=True, null=True)),
                ('duty_in_7', models.TimeField(blank=True, null=True)),
                ('duty_out_7', models.TimeField(blank=True, null=True)),
                ('duty_in_8', models.TimeField(blank=True, null=True)),
                ('duty_out_8', models.TimeField(blank=True, null=True)),
                ('duty_in_9', models.TimeField(blank=True, null=True)),
                ('duty_out_9', models.TimeField(blank=True, null=True)),
                ('duty_in_10', models.TimeField(blank=True, null=True)),
                ('duty_out_10', models.TimeField(blank=True, null=True)),
                ('employeeid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource.employee')),
            ],
            options={
                'db_table': 'mandays_missed_punch_attendance',
            },
        ),
        migrations.CreateModel(
            name='ManualLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeid', models.CharField(blank=True, max_length=50, null=True)),
                ('log_datetime', models.DateTimeField(blank=True, null=True)),
                ('direction', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'manual_logs',
                'indexes': [models.Index(fields=['employeeid', 'log_datetime'], name='manual_emp_logdt'), models.Index(fields=['log_datetime'], name='manual_logdt'), models.Index(fields=['direction'], name='manual_dir')],
            },
        ),
        migrations.CreateModel(
            name='ProcessedLogs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('employeeid', models.CharField(blank=True, max_length=50, null=True)),
                ('log_datetime', models.DateTimeField(blank=True, null=True)),
                ('direction', models.CharField(blank=True, max_length=50, null=True)),
                ('shortname', models.CharField(blank=True, max_length=50, null=True)),
                ('serialno', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'processed_logs',
                'indexes': [models.Index(fields=['id'], name='processedlogs_id'), models.Index(fields=['employeeid', 'log_datetime'], name='processed_emp_logdt'), models.Index(fields=['log_datetime'], name='processed_logdt'), models.Index(fields=['direction'], name='processed_dir')],
            },
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['employee_id'], name='idx_employee_id'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['employee_id', 'employee_name'], name='idx_employee_id_name'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['bank_account_no', 'bank_name'], name='idx_bank_account_bank_name'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['job_type', 'job_status'], name='idx_job_type_status'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['date_of_joining', 'date_of_leaving'], name='idx_joining_leaving'),
        ),
        migrations.AlterUniqueTogether(
            name='awoworkoffcorrection',
            unique_together={('employee', 'corrected_date')},
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['logdate'], name='idx_logdate'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employeeid', 'logdate'], name='idx_employeeid_logdate'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('employeeid', 'logdate')},
        ),
        migrations.AlterUniqueTogether(
            name='mandaysattendance',
            unique_together={('employeeid', 'logdate')},
        ),
    ]
